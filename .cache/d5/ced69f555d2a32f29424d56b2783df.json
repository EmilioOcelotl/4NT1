{"id":"ntvm","dependencies":[{"name":"/home/emi/proyectos/tfjs-models/face-landmarks-detection/anti/package.json","includedInParent":true,"mtime":1666741640575}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.AfterimageShader=void 0;var t={uniforms:{damp:{value:.96},tOld:{value:null},tNew:{value:null}},vertexShader:\"\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvUv = uv;\\n\\t\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\n\\t\\t}\",fragmentShader:\"\\n\\n\\t\\tuniform float damp;\\n\\n\\t\\tuniform sampler2D tOld;\\n\\t\\tuniform sampler2D tNew;\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvec4 when_gt( vec4 x, float y ) {\\n\\n\\t\\t\\treturn max( sign( x - y ), 0.0 );\\n\\n\\t\\t}\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvec4 texelOld = texture2D( tOld, vUv );\\n\\t\\t\\tvec4 texelNew = texture2D( tNew, vUv );\\n\\n\\t\\t\\ttexelOld *= damp * when_gt( texelOld, 0.1 );\\n\\n\\t\\t\\tgl_FragColor = max(texelNew, texelOld);\\n\\n\\t\\t}\"};exports.AfterimageShader=t;"},"sourceMaps":{"js":{"mappings":[{"source":"jsm/shaders/AfterimageShader.js","original":{"line":54,"column":2},"generated":{"line":1,"column":0}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":54,"column":2},"generated":{"line":1,"column":13}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":54,"column":2},"generated":{"line":1,"column":20}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":54,"column":2},"generated":{"line":1,"column":35}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":54,"column":2},"generated":{"line":1,"column":43}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":54,"column":2},"generated":{"line":1,"column":56}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":54,"column":2},"generated":{"line":1,"column":57}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":54,"column":2},"generated":{"line":1,"column":64}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":54,"column":2},"generated":{"line":1,"column":68}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":54,"column":2},"generated":{"line":1,"column":76}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":54,"column":2},"generated":{"line":1,"column":98}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":7,"column":0},"generated":{"line":1,"column":100}},{"source":"jsm/shaders/AfterimageShader.js","name":"AfterimageShader","original":{"line":7,"column":6},"generated":{"line":1,"column":104}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":7,"column":25},"generated":{"line":1,"column":106}},{"source":"jsm/shaders/AfterimageShader.js","name":"uniforms","original":{"line":9,"column":1},"generated":{"line":1,"column":107}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":9,"column":11},"generated":{"line":1,"column":116}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":11,"column":2},"generated":{"line":1,"column":117}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":11,"column":10},"generated":{"line":1,"column":122}},{"source":"jsm/shaders/AfterimageShader.js","name":"value","original":{"line":11,"column":11},"generated":{"line":1,"column":123}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":11,"column":18},"generated":{"line":1,"column":129}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":12,"column":2},"generated":{"line":1,"column":134}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":12,"column":10},"generated":{"line":1,"column":139}},{"source":"jsm/shaders/AfterimageShader.js","name":"value","original":{"line":12,"column":11},"generated":{"line":1,"column":140}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":12,"column":18},"generated":{"line":1,"column":146}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":13,"column":2},"generated":{"line":1,"column":152}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":13,"column":10},"generated":{"line":1,"column":157}},{"source":"jsm/shaders/AfterimageShader.js","name":"value","original":{"line":13,"column":11},"generated":{"line":1,"column":158}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":13,"column":18},"generated":{"line":1,"column":164}},{"source":"jsm/shaders/AfterimageShader.js","name":"vertexShader","original":{"line":17,"column":1},"generated":{"line":1,"column":171}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":26,"column":4},"generated":{"line":1,"column":184}},{"source":"jsm/shaders/AfterimageShader.js","name":"fragmentShader","original":{"line":28,"column":1},"generated":{"line":1,"column":342}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":28,"column":17},"generated":{"line":1,"column":357}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":54,"column":2},"generated":{"line":1,"column":795}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":54,"column":2},"generated":{"line":1,"column":803}},{"source":"jsm/shaders/AfterimageShader.js","original":{"line":54,"column":2},"generated":{"line":1,"column":820}}],"sources":{"jsm/shaders/AfterimageShader.js":"/**\n * Afterimage shader\n * I created this effect inspired by a demo on codepen:\n * https://codepen.io/brunoimbrizi/pen/MoRJaN?page=1&\n */\n\nconst AfterimageShader = {\n\n\tuniforms: {\n\n\t\t'damp': {value: 0.96},\n\t\t'tOld': {value: null},\n\t\t'tNew': {value: null},\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform float damp;\n\n\t\tuniform sampler2D tOld;\n\t\tuniform sampler2D tNew;\n\n\t\tvarying vec2 vUv;\n\n\t\tvec4 when_gt( vec4 x, float y ) {\n\n\t\t\treturn max( sign( x - y ), 0.0 );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvec4 texelOld = texture2D( tOld, vUv );\n\t\t\tvec4 texelNew = texture2D( tNew, vUv );\n\n\t\t\ttexelOld *= damp * when_gt( texelOld, 0.1 );\n\n\t\t\tgl_FragColor = max(texelNew, texelOld);\n\n\t\t}`,\n\n};\n\nexport {AfterimageShader};\n"},"lineCount":null}},"error":null,"hash":"69363cb919e3a799305b1757482cb73c","cacheData":{"env":{}}}