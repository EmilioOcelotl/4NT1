{"id":"node_modules/standardized-audio-context/build/es2019/guards/audio-node.js","dependencies":[{"name":"/home/emi/proyectos/tfjs-models/face-landmarks-detection/anti/node_modules/standardized-audio-context/build/es2019/guards/audio-node.js.map","includedInParent":true,"mtime":1644293395629},{"name":"/home/emi/proyectos/tfjs-models/face-landmarks-detection/anti/node_modules/standardized-audio-context/src/guards/audio-node.ts","includedInParent":true,"mtime":1644293395629},{"name":"/home/emi/proyectos/tfjs-models/face-landmarks-detection/anti/package.json","includedInParent":true,"mtime":1666741225716},{"name":"/home/emi/proyectos/tfjs-models/face-landmarks-detection/anti/node_modules/standardized-audio-context/package.json","includedInParent":true,"mtime":1644293395629}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isAudioNode = void 0;\nconst isAudioNode = audioNodeOrAudioParam => {\n  return 'context' in audioNodeOrAudioParam;\n};\nexports.isAudioNode = isAudioNode;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/guards/audio-node.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":7,"column":0}},{"source":"../../../src/guards/audio-node.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":7,"column":6}},{"source":"../../../src/guards/audio-node.ts","name":null,"original":{"line":4,"column":24},"generated":{"line":7,"column":17}},{"source":"../../../src/guards/audio-node.ts","name":null,"original":{"line":5,"column":4},"generated":{"line":7,"column":20}},{"source":"../../../src/guards/audio-node.ts","name":null,"original":{"line":5,"column":54},"generated":{"line":7,"column":41}},{"source":"../../../src/guards/audio-node.ts","name":null,"original":{"line":6,"column":44},"generated":{"line":7,"column":45}},{"source":"../../../src/guards/audio-node.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":8,"column":2}},{"source":"../../../src/guards/audio-node.ts","name":null,"original":{"line":7,"column":11},"generated":{"line":8,"column":9}},{"source":"../../../src/guards/audio-node.ts","name":null,"original":{"line":7,"column":20},"generated":{"line":8,"column":18}},{"source":"../../../src/guards/audio-node.ts","name":null,"original":{"line":7,"column":24},"generated":{"line":8,"column":22}},{"source":"../../../src/guards/audio-node.ts","name":null,"original":{"line":7,"column":45},"generated":{"line":8,"column":43}},{"source":"../../../src/guards/audio-node.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../src/guards/audio-node.ts","name":null,"original":{"line":8,"column":1},"generated":{"line":9,"column":1}},{"source":"../../../src/guards/audio-node.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":10,"column":0}}],"sources":{"../../../src/guards/audio-node.ts":"import { IAudioNode, IAudioParam } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isAudioNode = <T extends TContext>(\n    audioNodeOrAudioParam: IAudioNode<T> | IAudioParam\n): audioNodeOrAudioParam is IAudioNode<T> => {\n    return 'context' in audioNodeOrAudioParam;\n};\n"},"lineCount":null}},"error":null,"hash":"0bf9a9f62c771d6d0eb0f0c0c1d03e6a","cacheData":{"env":{}}}