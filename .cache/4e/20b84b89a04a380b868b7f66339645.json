{"id":"node_modules/tone/build/esm/effect/BitCrusher.worklet.js","dependencies":[{"name":"/home/emi/proyectos/tfjs-models/face-landmarks-detection/anti/node_modules/tone/build/esm/effect/BitCrusher.worklet.js.map","includedInParent":true,"mtime":1623948821038},{"name":"/home/emi/proyectos/tfjs-models/face-landmarks-detection/anti/node_modules/tone/Tone/effect/BitCrusher.worklet.ts","includedInParent":true,"mtime":1623948821038},{"name":"/home/emi/proyectos/tfjs-models/face-landmarks-detection/anti/package.json","includedInParent":true,"mtime":1666741225716},{"name":"/home/emi/proyectos/tfjs-models/face-landmarks-detection/anti/node_modules/tone/package.json","includedInParent":true,"mtime":1623948821038},{"name":"../core/worklet/SingleIOProcessor.worklet","loc":{"line":1,"column":7,"index":7},"parent":"/home/emi/proyectos/tfjs-models/face-landmarks-detection/anti/node_modules/tone/build/esm/effect/BitCrusher.worklet.js","resolved":"/home/emi/proyectos/tfjs-models/face-landmarks-detection/anti/node_modules/tone/build/esm/core/worklet/SingleIOProcessor.worklet.js"},{"name":"../core/worklet/WorkletGlobalScope","loc":{"line":2,"column":34,"index":86},"parent":"/home/emi/proyectos/tfjs-models/face-landmarks-detection/anti/node_modules/tone/build/esm/effect/BitCrusher.worklet.js","resolved":"/home/emi/proyectos/tfjs-models/face-landmarks-detection/anti/node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.workletName = exports.bitCrusherWorklet = void 0;\nrequire(\"../core/worklet/SingleIOProcessor.worklet\");\nvar _WorkletGlobalScope = require(\"../core/worklet/WorkletGlobalScope\");\nconst workletName = \"bit-crusher\";\nexports.workletName = workletName;\nconst bitCrusherWorklet = /* javascript */`\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16,\n\t\t\t\tautomationRate: 'k-rate'\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n`;\nexports.bitCrusherWorklet = bitCrusherWorklet;\n(0, _WorkletGlobalScope.registerProcessor)(workletName, bitCrusherWorklet);"},"sourceMaps":{"js":{"mappings":[{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":9,"column":0}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":9,"column":6}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":4,"column":24},"generated":{"line":9,"column":17}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":9,"column":20}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":4,"column":40},"generated":{"line":9,"column":33}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":4,"column":41},"generated":{"line":10,"column":0}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":6,"column":7},"generated":{"line":11,"column":0}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":6,"column":13},"generated":{"line":11,"column":6}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":6,"column":30},"generated":{"line":11,"column":23}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":6,"column":33},"generated":{"line":11,"column":26}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":6,"column":49},"generated":{"line":11,"column":42}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":25,"column":1},"generated":{"line":30,"column":1}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":31,"column":0}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":32,"column":4}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":27,"column":17},"generated":{"line":32,"column":41}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":27,"column":18},"generated":{"line":32,"column":43}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":27,"column":29},"generated":{"line":32,"column":54}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":27,"column":31},"generated":{"line":32,"column":56}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":27,"column":48},"generated":{"line":32,"column":73}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":27,"column":49},"generated":{"line":32,"column":74}}],"sources":{"../../../Tone/effect/BitCrusher.worklet.ts":"import \"../core/worklet/SingleIOProcessor.worklet\";\nimport { registerProcessor } from \"../core/worklet/WorkletGlobalScope\";\n\nexport const workletName = \"bit-crusher\";\n\nexport const bitCrusherWorklet = /* javascript */`\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16,\n\t\t\t\tautomationRate: 'k-rate'\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n`;\n\nregisterProcessor(workletName, bitCrusherWorklet);\n"},"lineCount":null}},"error":null,"hash":"7ae0b579691e9d7124aba0ba222f6f85","cacheData":{"env":{}}}